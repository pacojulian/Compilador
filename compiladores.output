Terminals unused in grammar

   COMA
   LTEQ
   INT_NUM
   FLOAT_NUM


State 51 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: var_dec stmt_seq

    2 var_dec: var_dec single_dec
    3        | %empty

    4 single_dec: type ID SEMI

    5 type: INTEGER
    6     | FLOAT

    7 stmt_seq: stmt_seq stmt
    8         | %empty

    9 stmt: IF exp THEN stmt
   10     | IF exp THEN stmt ELSE stmt
   11     | WHILE exp DO stmt
   12     | variable ASSIGN exp SEMI
   13     | READ LPAREN variable RPAREN SEMI
   14     | WRITE LPAREN exp RPAREN SEMI
   15     | block

   16 block: LBRACE stmt_seq RBRACE

   17 exp: simple_exp LT simple_exp
   18    | simple_exp EQ simple_exp
   19    | simple_exp GT simple_exp
   20    | simple_exp GE simple_exp
   21    | simple_exp LE simple_exp
   22    | simple_exp NE simple_exp
   23    | simple_exp

   24 simple_exp: simple_exp PLUS term
   25           | simple_exp MINUS term
   26           | term

   27 term: term TIMES factor
   28     | term DIV factor
   29     | factor

   30 factor: LPAREN exp RPAREN
   31       | INTEGER
   32       | FLOAT
   33       | variable

   34 variable: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 4 34
SEMI (259) 4 12 13 14
INTEGER (260) 5 31
FLOAT (261) 6 32
COMA (262)
IF (263) 9 10
THEN (264) 9 10
ELSE (265) 10
WHILE (266) 11
DO (267) 11
ASSIGN (268) 12
WRITE (269) 14
READ (270) 13
LPAREN (271) 13 14 30
RPAREN (272) 13 14 30
LBRACE (273) 16
RBRACE (274) 16
LT (275) 17
GT (276) 19
LE (277) 21
GE (278) 20
EQ (279) 18
NE (280) 22
LTEQ (281)
PLUS (282) 24
MINUS (283) 25
TIMES (284) 27
DIV (285) 28
INT_NUM (286)
FLOAT_NUM (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
var_dec (35)
    on left: 2 3, on right: 1 2
single_dec (36)
    on left: 4, on right: 2
type (37)
    on left: 5 6, on right: 4
stmt_seq (38)
    on left: 7 8, on right: 1 7 16
stmt (39)
    on left: 9 10 11 12 13 14 15, on right: 7 9 10 11
block (40)
    on left: 16, on right: 15
exp (41)
    on left: 17 18 19 20 21 22 23, on right: 9 10 11 12 14 30
simple_exp (42)
    on left: 24 25 26, on right: 17 18 19 20 21 22 23 24 25
term (43)
    on left: 27 28 29, on right: 24 25 26 27 28
factor (44)
    on left: 30 31 32 33, on right: 27 28 29
variable (45)
    on left: 34, on right: 12 13 33


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (var_dec)

    program  go to state 1
    var_dec  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: var_dec . stmt_seq
    2 var_dec: var_dec . single_dec

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 8 (stmt_seq)

    single_dec  go to state 6
    type        go to state 7
    stmt_seq    go to state 8


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 type: INTEGER .

    $default  reduce using rule 5 (type)


State 5

    6 type: FLOAT .

    $default  reduce using rule 6 (type)


State 6

    2 var_dec: var_dec single_dec .

    $default  reduce using rule 2 (var_dec)


State 7

    4 single_dec: type . ID SEMI

    ID  shift, and go to state 9


State 8

    1 program: var_dec stmt_seq .
    7 stmt_seq: stmt_seq . stmt

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    WRITE   shift, and go to state 13
    READ    shift, and go to state 14
    LBRACE  shift, and go to state 15

    $default  reduce using rule 1 (program)

    stmt      go to state 16
    block     go to state 17
    variable  go to state 18


State 9

    4 single_dec: type ID . SEMI

    SEMI  shift, and go to state 19


State 10

   34 variable: ID .

    $default  reduce using rule 34 (variable)


State 11

    9 stmt: IF . exp THEN stmt
   10     | IF . exp THEN stmt ELSE stmt

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    exp         go to state 23
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 12

   11 stmt: WHILE . exp DO stmt

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    exp         go to state 28
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 13

   14 stmt: WRITE . LPAREN exp RPAREN SEMI

    LPAREN  shift, and go to state 29


State 14

   13 stmt: READ . LPAREN variable RPAREN SEMI

    LPAREN  shift, and go to state 30


State 15

   16 block: LBRACE . stmt_seq RBRACE

    $default  reduce using rule 8 (stmt_seq)

    stmt_seq  go to state 31


State 16

    7 stmt_seq: stmt_seq stmt .

    $default  reduce using rule 7 (stmt_seq)


State 17

   15 stmt: block .

    $default  reduce using rule 15 (stmt)


State 18

   12 stmt: variable . ASSIGN exp SEMI

    ASSIGN  shift, and go to state 32


State 19

    4 single_dec: type ID SEMI .

    $default  reduce using rule 4 (single_dec)


State 20

   31 factor: INTEGER .

    $default  reduce using rule 31 (factor)


State 21

   32 factor: FLOAT .

    $default  reduce using rule 32 (factor)


State 22

   30 factor: LPAREN . exp RPAREN

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    exp         go to state 33
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 23

    9 stmt: IF exp . THEN stmt
   10     | IF exp . THEN stmt ELSE stmt

    THEN  shift, and go to state 34


State 24

   17 exp: simple_exp . LT simple_exp
   18    | simple_exp . EQ simple_exp
   19    | simple_exp . GT simple_exp
   20    | simple_exp . GE simple_exp
   21    | simple_exp . LE simple_exp
   22    | simple_exp . NE simple_exp
   23    | simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    LT     shift, and go to state 35
    GT     shift, and go to state 36
    LE     shift, and go to state 37
    GE     shift, and go to state 38
    EQ     shift, and go to state 39
    NE     shift, and go to state 40
    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 23 (exp)


State 25

   26 simple_exp: term .
   27 term: term . TIMES factor
   28     | term . DIV factor

    TIMES  shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 26 (simple_exp)


State 26

   29 term: factor .

    $default  reduce using rule 29 (term)


State 27

   33 factor: variable .

    $default  reduce using rule 33 (factor)


State 28

   11 stmt: WHILE exp . DO stmt

    DO  shift, and go to state 45


State 29

   14 stmt: WRITE LPAREN . exp RPAREN SEMI

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    exp         go to state 46
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 30

   13 stmt: READ LPAREN . variable RPAREN SEMI

    ID  shift, and go to state 10

    variable  go to state 47


State 31

    7 stmt_seq: stmt_seq . stmt
   16 block: LBRACE stmt_seq . RBRACE

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    WRITE   shift, and go to state 13
    READ    shift, and go to state 14
    LBRACE  shift, and go to state 15
    RBRACE  shift, and go to state 48

    stmt      go to state 16
    block     go to state 17
    variable  go to state 18


State 32

   12 stmt: variable ASSIGN . exp SEMI

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    exp         go to state 49
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 33

   30 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 50


State 34

    9 stmt: IF exp THEN . stmt
   10     | IF exp THEN . stmt ELSE stmt

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    WRITE   shift, and go to state 13
    READ    shift, and go to state 14
    LBRACE  shift, and go to state 15

    stmt      go to state 51
    block     go to state 17
    variable  go to state 18


State 35

   17 exp: simple_exp LT . simple_exp

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    simple_exp  go to state 52
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 36

   19 exp: simple_exp GT . simple_exp

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    simple_exp  go to state 53
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 37

   21 exp: simple_exp LE . simple_exp

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    simple_exp  go to state 54
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 38

   20 exp: simple_exp GE . simple_exp

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    simple_exp  go to state 55
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 39

   18 exp: simple_exp EQ . simple_exp

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    simple_exp  go to state 56
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 40

   22 exp: simple_exp NE . simple_exp

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    simple_exp  go to state 57
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 41

   24 simple_exp: simple_exp PLUS . term

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    term      go to state 58
    factor    go to state 26
    variable  go to state 27


State 42

   25 simple_exp: simple_exp MINUS . term

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    term      go to state 59
    factor    go to state 26
    variable  go to state 27


State 43

   27 term: term TIMES . factor

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    factor    go to state 60
    variable  go to state 27


State 44

   28 term: term DIV . factor

    ID       shift, and go to state 10
    INTEGER  shift, and go to state 20
    FLOAT    shift, and go to state 21
    LPAREN   shift, and go to state 22

    factor    go to state 61
    variable  go to state 27


State 45

   11 stmt: WHILE exp DO . stmt

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    WRITE   shift, and go to state 13
    READ    shift, and go to state 14
    LBRACE  shift, and go to state 15

    stmt      go to state 62
    block     go to state 17
    variable  go to state 18


State 46

   14 stmt: WRITE LPAREN exp . RPAREN SEMI

    RPAREN  shift, and go to state 63


State 47

   13 stmt: READ LPAREN variable . RPAREN SEMI

    RPAREN  shift, and go to state 64


State 48

   16 block: LBRACE stmt_seq RBRACE .

    $default  reduce using rule 16 (block)


State 49

   12 stmt: variable ASSIGN exp . SEMI

    SEMI  shift, and go to state 65


State 50

   30 factor: LPAREN exp RPAREN .

    $default  reduce using rule 30 (factor)


State 51

    9 stmt: IF exp THEN stmt .
   10     | IF exp THEN stmt . ELSE stmt

    ELSE  shift, and go to state 66

    ELSE      [reduce using rule 9 (stmt)]
    $default  reduce using rule 9 (stmt)


State 52

   17 exp: simple_exp LT simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 17 (exp)


State 53

   19 exp: simple_exp GT simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 19 (exp)


State 54

   21 exp: simple_exp LE simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 21 (exp)


State 55

   20 exp: simple_exp GE simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 20 (exp)


State 56

   18 exp: simple_exp EQ simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 18 (exp)


State 57

   22 exp: simple_exp NE simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    $default  reduce using rule 22 (exp)


State 58

   24 simple_exp: simple_exp PLUS term .
   27 term: term . TIMES factor
   28     | term . DIV factor

    TIMES  shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 24 (simple_exp)


State 59

   25 simple_exp: simple_exp MINUS term .
   27 term: term . TIMES factor
   28     | term . DIV factor

    TIMES  shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 25 (simple_exp)


State 60

   27 term: term TIMES factor .

    $default  reduce using rule 27 (term)


State 61

   28 term: term DIV factor .

    $default  reduce using rule 28 (term)


State 62

   11 stmt: WHILE exp DO stmt .

    $default  reduce using rule 11 (stmt)


State 63

   14 stmt: WRITE LPAREN exp RPAREN . SEMI

    SEMI  shift, and go to state 67


State 64

   13 stmt: READ LPAREN variable RPAREN . SEMI

    SEMI  shift, and go to state 68


State 65

   12 stmt: variable ASSIGN exp SEMI .

    $default  reduce using rule 12 (stmt)


State 66

   10 stmt: IF exp THEN stmt ELSE . stmt

    ID      shift, and go to state 10
    IF      shift, and go to state 11
    WHILE   shift, and go to state 12
    WRITE   shift, and go to state 13
    READ    shift, and go to state 14
    LBRACE  shift, and go to state 15

    stmt      go to state 69
    block     go to state 17
    variable  go to state 18


State 67

   14 stmt: WRITE LPAREN exp RPAREN SEMI .

    $default  reduce using rule 14 (stmt)


State 68

   13 stmt: READ LPAREN variable RPAREN SEMI .

    $default  reduce using rule 13 (stmt)


State 69

   10 stmt: IF exp THEN stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)
